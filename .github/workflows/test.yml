#
# 编译主程序,请勿修改文件名称（compile.yml）
#


name: test
on:
  workflow_dispatch:
    inputs:
      REPO_BRANCH:
        description: '（大雕源码）请选择源码分支'
        required: true
        default: 'master'
        type: choice
        options:
          - 'master'
          - 'gl-ax1800'

env:
  GITHUB_LINK: https://github.com/${{github.repository}}
  GIT_ACTOR: ${{github.actor}}
  GIT_REPOSITORY: ${{github.repository}}
  RUN_NUMBER: ${{github.run_number}}
  RUN_WORKFLOW: ${{github.workflow}}
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  PUSH_PLUS_TOKEN: ${{ secrets.PUSH_PLUS_TOKEN }}
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  TZ: Asia/Shanghai

jobs:
  build:
    name: 编译 "${{matrix.target}}"
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}
    
    env:
      FOLDER_NAME: ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        target: [Lede]

    steps:    
    - name: 准备结束
      uses: actions/checkout@v3

    - name: 读取脚本设置
      run: |
        cd ${GITHUB_WORKSPACE}
        git clone https://github.com/281677160/common build/common
        mv -f build/common/*.sh build/${{matrix.target}}/
        sudo chmod -R +x build
        if [[ -n "${{ github.event.workflow }}" ]]; then
          export Manually_Run="1"
          source build/${{matrix.target}}/common.sh && Diy_menu1
        else
          source build/${{matrix.target}}/common.sh && Diy_menu1
        fi

    - name: CPU检测
      run: |
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        if [[ -n "${{ github.event.workflow }}" ]]; then
          export CPU_SELECTIOY="$(source "${GITHUB_WORKSPACE}/build/${FOLDER_NAME}/settings.ini" && echo "${CPU_SELECTION}")"
        else
          export CPU_PASSWORD="1684224661"
          export CPU_OPTIMIZATION="E5"
        fi
        source build/${FOLDER_NAME}/common.sh && CPU_Priority
    
    - name: 发布固件
      uses: ncipollo/release-action@main
      with:
        name: 📦‍ 固件下载 | ${{ env.SOURCE }}-${{ env.PROMPT_TING }} | ${{ env.date }}
        tag: a${{ env.date }}
        token: ${{ secrets.REPO_TOKEN }}
        allowUpdates: true
        body: "## 🗒️ 固件信息</br>- 发布日期：${{ env.Tongzhi_Date }}</br>- 🔗 后台地址：192.168.10.1"
        
    - name: 发送[在线更新固件]至云端1
      id: autoup
      if: steps.compile.outcome == 'success' && env.UPDATE_FIRMWARE_ONLINE == 'true' && env.REPO_TOKEN
      uses: ncipollo/release-action@main
      with:
        name: AutoUpdate
        tag: ${{ env.TARGET_BOARD }}
        token: ${{ secrets.REPO_TOKEN }}
        allowUpdates: true
        body: ${{ env.Tongzhi_Date }}
        artifacts: "${{ env.BIN_PATH }}/*"
        
    - name: 发送[在线更新固件]至云端2
      if: steps.autoup.outcome == 'success' && env.UPDATE_FIRMWARE_ONLINE == 'true' && env.REPO_TOKEN
      run: |
        mkdir -p Github_Api
        cd Github_Api
        curl -H "Authorization: Bearer ${REPO_TOKEN}" https://api.github.com/repos/${{github.repository}}/releases/tags/${{ env.TARGET_BOARD }} -o zzz_api
        if [[ $? -ne 0 ]]; then
          curl -H "Authorization: Bearer ${REPO_TOKEN}" https://api.github.com/repos/${{github.repository}}/releases/tags/${TARGET_BOARD} > zzz_api
        fi
        
    - name: 发送[在线更新固件]至云端3
      if: steps.autoup.outcome == 'success' && env.UPDATE_FIRMWARE_ONLINE == 'true' && env.REPO_TOKEN
      uses: ncipollo/release-action@main
      with:
        name: 🆙‍ 固件更新 | ${{ env.TARGET_BOARD }} | ${{ env.date }}
        tag: ${{ env.TARGET_BOARD }}
        token: ${{ secrets.REPO_TOKEN }}
        artifacts: "Github_Api/*"
        allowUpdates: true
        body: "## 🗒️ 固件信息</br>- 发布日期：${{ env.Tongzhi_Date }}</br>- 🔗 后台地址：192.168.10.1"

    - name: 电报机器人或pushplus信息通知
      if: env.PUSH_PLUS_TOKEN && env.INFORMATION_NOTICE == 'PUSH' || env.TELEGRAM_BOT_TOKEN && env.INFORMATION_NOTICE == 'TG'
      run: |
        if [[ "${{ env.INFORMATION_NOTICE }}" == "TG" ]]; then
          if [[ "${{steps.compile.outcome}}" == 'success' ]]; then
            curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=我亲爱的✨主人✨：您使用【${{matrix.target}}】文件夹编译【${REPO_BRANCH}分支的${{env.TARGET_PROFILE}}】固件顺利编译完成了✌️💯💐(${{env.WAREHOUSE_MAN}}仓库的#${{env.RUN_NUMBER}}号)！($(date +%Y年%m月%d号%H时%M分))" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
          fi
        fi
        if [[ "${{ env.INFORMATION_NOTICE }}" == "PUSH" ]]; then
          if [[ "${{steps.compile.outcome}}" == 'success' ]]; then
            curl -k --data token="${{ secrets.PUSH_PLUS_TOKEN }}" --data title="[${{ env.SOURCE }}-${{ env.TARGET_PROFILE }}]编译成功" --data "content=我亲爱的✨主人✨：您使用【${{matrix.target}}】文件夹编译【${REPO_BRANCH}分支的${{env.TARGET_PROFILE}}】固件顺利编译完成了✌️💯💐(${{env.WAREHOUSE_MAN}}仓库的#${{env.RUN_NUMBER}}号)！($(date +%Y年%m月%d号%H时%M分))" "http://www.pushplus.plus/send"
          fi
        fi
